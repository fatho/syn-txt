A text-based synthesizer
========================

.. toctree::
  :maxdepth: 2
  :caption: Contents:


The goal is for this to be a declarative, text-based synthesizer/audio workstation.
At the moment, it is very much work in progress. The repository contains a roadmap_
with a rough outline of what is planned for the near future.

However, there is already a working prototype that includes

- an interpreter for a very small subset of a scheme-like language
  that can be used for defining piano rolls (examples_)
- a synthesizer turning notes into waveforms
- an interpreter for that language to play piano rolls on the built-in synthesizer

Build Instructions
------------------

The project is written in Rust_ and all tooling is pulled in via Nix_,
although just having rustc and Cargo available *should* just work.
That said, you can simply run `nix-shell` in the repository root to drop
into a shell where all dependencies are avaiable.
Then, the normal Cargo_ workflow applies.

.. code-block:: bash

   # Play the included example melody
   cargo run --bin musicc test-data/demo.syn

At the moment, sound is played by spawning sox_ in a subprocess and piping the audio data to it.

.. _roadmap: https://github.com/fatho/syn-txt/blob/master/planning/roadmap.md
.. _examples: https://github.com/fatho/syn-txt/blob/master/test-data/
.. _Rust: https://www.rust-lang.org/
.. _Nix: https://nixos.org/nix/
.. _Cargo: https://doc.rust-lang.org/cargo/
.. _sox: http://sox.sourceforge.net/

Indices and tables
==================

* :ref:`genindex`
* :ref:`search`
