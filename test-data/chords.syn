(define melody
    (begin
        (define (chord len a b c)
            (define vel (/ 1 3))
            (list
                (note :start 0 :pitch a :length len :velocity vel)
                (note :start 0 :pitch b :length len :velocity vel)
                (note :start 0 :pitch c :length len :velocity vel)
            )
        )

        (sequence-all
            (list
                (chord 1/1 "a2" "c3" "e3")
                (chord 1/1 "a2" "d3" "f3")
                (chord 1/2 "g#2" "b3" "e3")
                (chord 1/2 "g#2" "b3" "d3")
                (chord 1/1 "a2" "c3" "e3")
            ))))

(define pad 
    (synth
        ; The name determines which synthesizer to instantiate, but
        ; currently, there is only the "test" synthesizer.
        :name "test"
        ; The available parameters depend on the synthesizer
    :params
        (dict
            :gain 1.0
            ; Use three oscillators
            :unison 3
            ; detuned from -7 to +7 cents, linearly distributed
            ; across all voices (so one -7, one 0 and one +7 cents)
            :unison-detune 7
            ; The basic shape generated by the oscillators
            :wave-shape "twosidedsaw"
            ; Envelopes give shape to the amplitude of each note.
            :envelope
                (envelope
                    :attack 1.0   ; seconds
                    :decay 1.0    ; seconds
                    :sustain 0.2  ; linear gain
                    :release 0.1  ; seconds
                    ))))

(song :bpm 120 :notes melody :instrument pad)